---
- name: ensure connectivity to all nodes
  hosts: all
  gather_facts: false
  pre_tasks: 
    - name: check if python is installed
      raw: test -e /usr/bin/python
      register: python_installed
      changed_when: false
      failed_when: false
    - name: check if debian based OS
      raw: which apt-get
      register: is_ubuntu
      changed_when: false
      failed_when: false
    - name: install python
      raw: (apt-get -y update && apt-get install -y python)
      when: python_installed.rc != 0 and is_ubuntu.rc == 0
    - name: install python
      raw: (yum install -y python)
      when: python_installed.rc != 0 and is_ubuntu.rc != 0
  tasks:
    - name: ansible setup
      action: setup
      tags: ['ping']
  any_errors_fatal: true
  max_fail_percentage: 0

- name: bootstrap nodes
  hosts: all
  gather_facts: true
  tasks:
    - name: disable resolvconf updates
      command: resolvconf --disable-updates
      when: ansible_os_family == 'Debian'

    - name: add alternative dnsmasq resolv.conf
      lineinfile:
        line: "resolv-file=/etc/dnsmasq_resolv.conf"
        path: /etc/dnsmasq.conf
        regexp: "^#resolv-file="

    - name: add dns servers to /etc/dnsmasq_resolv.conf
      lineinfile:
        create: yes
        line: "nameserver {{ item }}"
        path: /etc/dnsmasq_resolv.conf
      with_items: [10.0.80.11, 10.0.80.12]

    - name: rewrite /var/run/resolvconf/resolv.conf
      lineinfile:
        create: yes
        line: "nameserver {{ item }}"
        path: /var/run/resolvconf/resolv.conf
        regexp: "nameserver {{ item }}"
        state: absent
      with_items: [10.0.80.11, 10.0.80.12, 127.0.0.1]

    - name: rewrite /var/run/resolvconf/resolv.conf
      lineinfile:
        line: "nameserver {{ primaryBackendIpAddress }}"
        path: /var/run/resolvconf/resolv.conf
        regexp: "nameserver {{ primaryBackendIpAddress }}"

    - name: remove /etc/hosts
      file:
        dest: /etc/hosts
        state: absent

    - name: add localhost to /etc/hosts
      lineinfile:
        create: yes
        line: 127.0.0.1 localhost
        path: /etc/hosts

    - name: add host to /etc/hosts
      lineinfile:
        line: "{{ hostvars[item]['primaryBackendIpAddress'] }} {{ hostvars[item]['hostname'] }} {{ hostvars[item]['ansible_fqdn'] }}"
        path: /etc/hosts
      with_items: "{{ groups['all'] }}"

    - name: enable / start dnsmasq
      service:
        name: dnsmasq
        state: started
        enabled: true

    - name: restart dnsmasq
      service:
        name: dnsmasq
        state: restarted

    - block:
      - name: get Docker CE repo
        shell: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
        args:
          creates: /etc/yum.repos.d/docker-ce.repo

      - name: install Docker CE
        yum: 
          name: docker-ce
      when: ansible_os_family == "RedHat"

    - block:
      - name: Import Docker CE repository gpg key
        apt_key:
          url: https://download.docker.com/linux/ubuntu/gpg
          state: present
          id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88      
      - name: Add Docker CE repository
        apt_repository:
          repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
          state: present

      - name: Install Docker CE
        apt:
          name: docker-ce
          state: present
          update_cache: yes
      when: ansible_os_family == "Debian"

  any_errors_fatal: true
  max_fail_percentage: 0

